apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service.name: ingress
  name: ingress
  namespace: localdomain
spec:
  replicas: 2
  selector:
    matchLabels:
      service.name: ingress
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        service.name: ingress
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
      - env:
        - name: ENV_NAME
          value: development
        - name: LTD_DOMAIN
          value: localhost
        - name: CLUSTER_MASTER_SERVER
          value: 127.0.0.1
        - name: ENABLE_PAGE_CACHE
          value: 1
        image: localhost:5000/ingress:latest
        command: ["su", "-s", "/bin/sh", "root", "-c"]
        args: ["/usr/bin/openresty", "-g", "daemon off;"]
        name: ingress
        resources: {}
          # requests:
          #   memory: "512Mi"
          #   cpu: "512m"
          # limits:
          #   memory: "1024Mi"
          #   cpu: "1024m"
        ports:
        - containerPort: 44380
          protocol: TCP
        volumeMounts:
        - name: tmp-pvc
          mountPath: "/tmp/"
        - name: data-pvc
          mountPath: "/export/data/"
        # readinessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /health
        #     port: 3552
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        # livenessProbe:
        #   failureThreshold: 3
        #   httpGet:
        #     path: /health
        #     port: 3552
        #     scheme: HTTP
        #   initialDelaySeconds: 5
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        imagePullPolicy: Always
      restartPolicy: Always
      # imagePullSecrets:
      #   - name: registry-credentials
      terminationGracePeriodSeconds: 30
      volumes:
      - name: tmp-pvc
        persistentVolumeClaim:
          claimName: tmp
      - name: data-pvc
        persistentVolumeClaim:
          claimName: data
